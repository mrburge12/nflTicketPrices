timestamp<-gsub(" ", "_", timestamp)
timestamp<-gsub(":",".", timestamp)
date<-substr(x = timestamp,1,10)
#dataframes
publicSales <- eventData$sales$public
eventData$sales$public
eventData$sales$presales
View(eventData$sales$presales)
dropSalesDataCols <- c("presales")
eventData$sales<- eventData$sales[ , !(names(eventData$sales) %in% dropSalesDataCols)]
library(jsonlite)
library(data.table)
library(dplyr)
setwd('C:/Users/g1mxb12/Desktop/nflTicketPrices/data/rawDataWorkspaces/ticketmaster/')
path = 'C:/Users/g1mxb12/Desktop/nflTicketPrices/data/rawDataWorkspaces/ticketmaster/'
out.file<-""
file.names <- dir(path, pattern =".RData")
data <- load(file.names[1])
eventData<-response$`_embedded`$events
#fix timestamp variable
timestamp<-gsub(" ", "_", timestamp)
timestamp<-gsub(":",".", timestamp)
date<-substr(x = timestamp,1,10)
#dataframes
publicSales <- eventData$sales$public
dates <- eventData$dates
promoter <- eventData$promoter
seatmap <- eventData$seatmap
ticketLimit <- eventData$ticketLimit
accessibility <- eventData$accessibility
embedded <- eventData$`_embedded`
links <- eventData$`_links`
priceRange<- rbindlist(eventData$priceRanges, fill = TRUE)
dropSalesDataCols <- c("presales")
eventData$sales<- eventData$sales[ , !(names(eventData$sales) %in% dropSalesDataCols)]
dropEventDataCols <- c("public","_embedded","_links","priceRanges", "products","promoters","classifications", "images","sales", "priceRange", "dates", "promoter", "seatmap","ticketLimit", "accessibility", "`_embedded`", "`_links`")
eventData<- eventData[ , !(names(eventData) %in% dropEventDataCols)]
#Combine dataframes to export
finalEventData<-as.data.table(cbind(date,timestamp, eventData, sales, dates, promoter, ticketLimit, accessibility, priceRange, embedded, links))
outputFileName <- paste("C:/Users/g1mxb12/Desktop/nflTicketPrices/data/ticketmaster/cleanData/eventData/individual/tm_", timestamp, ".csv",sep="")
write.csv(finalEventData, file = outputFileName)
data <- load(file.names[1])
eventData<-response$`_embedded`$events
#fix timestamp variable
timestamp<-gsub(" ", "_", timestamp)
timestamp<-gsub(":",".", timestamp)
date<-substr(x = timestamp,1,10)
#dataframes
publicSales <- eventData$sales$public
dates <- eventData$dates
promoter <- eventData$promoter
seatmap <- eventData$seatmap
ticketLimit <- eventData$ticketLimit
accessibility <- eventData$accessibility
embedded <- eventData$`_embedded`
links <- eventData$`_links`
priceRange<- rbindlist(eventData$priceRanges, fill = TRUE)
dropSalesDataCols <- c("presales")
eventData$sales<- eventData$sales[ , !(names(eventData$sales) %in% dropSalesDataCols)]
dropEventDataCols <- c("public","_embedded","_links","priceRanges", "products","promoters","classifications", "images","sales", "priceRange", "dates", "promoter", "seatmap","ticketLimit", "accessibility", "`_embedded`", "`_links`")
eventData<- eventData[ , !(names(eventData) %in% dropEventDataCols)]
#Combine dataframes to export
finalEventData<-as.data.table(cbind(date,timestamp, eventData, publicSales, dates, promoter, ticketLimit, accessibility, priceRange, embedded, links))
outputFileName <- paste("C:/Users/g1mxb12/Desktop/nflTicketPrices/data/ticketmaster/cleanData/eventData/individual/tm_", timestamp, ".csv",sep="")
write.csv(finalEventData, file = outputFileName)
library(jsonlite)
library(data.table)
library(dplyr)
setwd('C:/Users/g1mxb12/Desktop/nflTicketPrices/data/rawDataWorkspaces/ticketmaster/')
path = 'C:/Users/g1mxb12/Desktop/nflTicketPrices/data/rawDataWorkspaces/ticketmaster/'
out.file<-""
file.names <- dir(path, pattern =".RData")
data <- load(file.names[1])
eventData<-response$`_embedded`$events
#fix timestamp variable
timestamp<-gsub(" ", "_", timestamp)
timestamp<-gsub(":",".", timestamp)
date<-substr(x = timestamp,1,10)
#dataframes
publicSales <- eventData$sales$public
dates<-eventData$dates
promoter <- eventData$promoter
seatmap <- eventData$seatmap
ticketLimit <- eventData$ticketLimit
accessibility <- eventData$accessibility
embedded <- eventData$`_embedded`
links <- eventData$`_links`
priceRange<- rbindlist(eventData$priceRanges, fill = TRUE)
startDates <- eventData$dates$start
status<-dates$status
dropDatesDataCols <- c("start", "status")
eventData$dates<- eventData$dates[ , !(names(eventData$dates) %in% dropDatesDataCols)]
dropSalesDataCols <- c("presales")
eventData$sales<- eventData$sales[ , !(names(eventData$sales) %in% dropSalesDataCols)]
dropEventDataCols <- c("public","_embedded","_links","priceRanges", "products","promoters","classifications", "images","sales", "priceRange", "dates", "promoter", "seatmap","ticketLimit", "accessibility", "`_embedded`", "`_links`")
eventData<- eventData[ , !(names(eventData) %in% dropEventDataCols)]
#Combine dataframes to export
finalEventData<-as.data.table(cbind(date,timestamp, eventData, publicSales, startDates, status, dates, promoter, ticketLimit, accessibility, priceRange, embedded, links))
outputFileName <- paste("C:/Users/g1mxb12/Desktop/nflTicketPrices/data/ticketmaster/cleanData/eventData/individual/tm_", timestamp, ".csv",sep="")
write.csv(finalEventData, file = outputFileName)
data <- load(file.names[1])
eventData<-response$`_embedded`$events
#fix timestamp variable
timestamp<-gsub(" ", "_", timestamp)
timestamp<-gsub(":",".", timestamp)
date<-substr(x = timestamp,1,10)
#dataframes
publicSales <- eventData$sales$public
dates<-eventData$dates
promoter <- eventData$promoter
seatmap <- eventData$seatmap
ticketLimit <- eventData$ticketLimit
accessibility <- eventData$accessibility
embedded <- eventData$`_embedded`
links <- eventData$`_links`
priceRange<- rbindlist(eventData$priceRanges, fill = TRUE)
startDates <- eventData$dates$start
status<-dates$status
dropDatesDataCols <- c("start", "status")
eventData$dates<- eventData$dates[ , !(names(eventData$dates) %in% dropDatesDataCols)]
dropSalesDataCols <- c("presales")
eventData$sales<- eventData$sales[ , !(names(eventData$sales) %in% dropSalesDataCols)]
dropEventDataCols <- c("public","_embedded","_links","priceRanges", "products","promoters", "status", "dates", "classifications", "images","sales", "priceRange", "dates", "promoter", "seatmap","ticketLimit", "accessibility", "`_embedded`", "`_links`")
eventData<- eventData[ , !(names(eventData) %in% dropEventDataCols)]
#Combine dataframes to export
finalEventData<-as.data.table(cbind(date,timestamp, eventData, publicSales, startDates, status, dates, promoter, ticketLimit, accessibility, priceRange, embedded, links))
outputFileName <- paste("C:/Users/g1mxb12/Desktop/nflTicketPrices/data/ticketmaster/cleanData/eventData/individual/tm_", timestamp, ".csv",sep="")
write.csv(finalEventData, file = outputFileName)
data <- load(file.names[1])
eventData<-response$`_embedded`$events
#fix timestamp variable
timestamp<-gsub(" ", "_", timestamp)
timestamp<-gsub(":",".", timestamp)
date<-substr(x = timestamp,1,10)
#dataframes
publicSales <- eventData$sales$public
dates<-eventData$dates
promoter <- eventData$promoter
seatmap <- eventData$seatmap
ticketLimit <- eventData$ticketLimit
accessibility <- eventData$accessibility
embedded <- eventData$`_embedded`
links <- eventData$`_links`
priceRange<- rbindlist(eventData$priceRanges, fill = TRUE)
startDates <- eventData$dates$start
status<-dates$status
dropDatesDataCols <- c("start", "status")
eventData$dates<- eventData$dates[ , !(names(eventData$dates) %in% dropDatesDataCols)]
dropSalesDataCols <- c("presales")
eventData$sales<- eventData$sales[ , !(names(eventData$sales) %in% dropSalesDataCols)]
dropEventDataCols <- c("public","_embedded","_links","priceRanges", "products","startDates","promoters", "status", "dates", "classifications", "images","sales", "priceRange", "dates", "promoter", "seatmap","ticketLimit", "accessibility", "`_embedded`", "`_links`")
eventData<- eventData[ , !(names(eventData) %in% dropEventDataCols)]
#Combine dataframes to export
finalEventData<-as.data.table(cbind(date,timestamp, eventData, publicSales, startDates, status, dates, promoter, ticketLimit, accessibility, priceRange, embedded, links))
outputFileName <- paste("C:/Users/g1mxb12/Desktop/nflTicketPrices/data/ticketmaster/cleanData/eventData/individual/tm_", timestamp, ".csv",sep="")
write.csv(finalEventData, file = outputFileName)
View(finalEventData$start)
library(jsonlite)
library(data.table)
library(dplyr)
setwd('C:/Users/g1mxb12/Desktop/nflTicketPrices/data/rawDataWorkspaces/ticketmaster/')
path = 'C:/Users/g1mxb12/Desktop/nflTicketPrices/data/rawDataWorkspaces/ticketmaster/'
out.file<-""
file.names <- dir(path, pattern =".RData")
data <- load(file.names[1])
eventData<-response$`_embedded`$events
#fix timestamp variable
timestamp<-gsub(" ", "_", timestamp)
timestamp<-gsub(":",".", timestamp)
date<-substr(x = timestamp,1,10)
#dataframes
publicSales <- eventData$sales$public
dates<-eventData$dates
promoter <- eventData$promoter
seatmap <- eventData$seatmap
ticketLimit <- eventData$ticketLimit
accessibility <- eventData$accessibility
embedded <- eventData$`_embedded`
links <- eventData$`_links`
priceRange<- rbindlist(eventData$priceRanges, fill = TRUE)
startDates <- eventData$dates$start
status<-dates$status
dropDatesDataCols <- c("start", "status")
eventData$dates<- eventData$dates[ , !(names(eventData$dates) %in% dropDatesDataCols)]
dropSalesDataCols <- c("presales")
eventData$sales<- eventData$sales[ , !(names(eventData$sales) %in% dropSalesDataCols)]
dropEventDataCols <- c("public","_embedded","_links","priceRanges", "products","startDates","promoters", "status", "dates", "classifications", "images","sales", "priceRange", "dates", "promoter", "seatmap","ticketLimit", "accessibility", "`_embedded`", "`_links`")
eventData<- eventData[ , !(names(eventData) %in% dropEventDataCols)]
#Combine dataframes to export
finalEventData<-as.data.table(cbind(date,timestamp, eventData, publicSales, startDates, status, dates, promoter, ticketLimit, accessibility, priceRange, embedded, links))
outputFileName <- paste("C:/Users/g1mxb12/Desktop/nflTicketPrices/data/ticketmaster/cleanData/eventData/individual/tm_", timestamp, ".csv",sep="")
write.csv(finalEventData, file = outputFileName)
View(finalEventData$start)
data <- load(file.names[1])
eventData<-response$`_embedded`$events
#fix timestamp variable
timestamp<-gsub(" ", "_", timestamp)
timestamp<-gsub(":",".", timestamp)
date<-substr(x = timestamp,1,10)
#dataframes
publicSales <- eventData$sales$public
dates<-eventData$dates
promoter <- eventData$promoter
seatmap <- eventData$seatmap
ticketLimit <- eventData$ticketLimit
accessibility <- eventData$accessibility
embedded <- eventData$`_embedded`
links <- eventData$`_links`
priceRange<- rbindlist(eventData$priceRanges, fill = TRUE)
startDates <- eventData$dates$start
status<-dates$status
dropDatesDataCols <- c("start", "status")
eventData$dates<- eventData$dates[ , !(names(eventData$dates) %in% dropDatesDataCols)]
dropSalesDataCols <- c("presales")
eventData$sales<- eventData$sales[ , !(names(eventData$sales) %in% dropSalesDataCols)]
dropEventDataCols <- c("start","public","_embedded","_links","priceRanges", "products","startDates","promoters", "status", "dates", "classifications", "images","sales", "priceRange", "dates", "promoter", "seatmap","ticketLimit", "accessibility", "`_embedded`", "`_links`")
eventData<- eventData[ , !(names(eventData) %in% dropEventDataCols)]
#Combine dataframes to export
finalEventData<-as.data.table(cbind(date,timestamp, eventData, publicSales, startDates, status, dates, promoter, ticketLimit, accessibility, priceRange, embedded, links))
outputFileName <- paste("C:/Users/g1mxb12/Desktop/nflTicketPrices/data/ticketmaster/cleanData/eventData/individual/tm_", timestamp, ".csv",sep="")
write.csv(finalEventData, file = outputFileName)
library(jsonlite)
library(data.table)
library(dplyr)
setwd('C:/Users/g1mxb12/Desktop/nflTicketPrices/data/rawDataWorkspaces/ticketmaster/')
path = 'C:/Users/g1mxb12/Desktop/nflTicketPrices/data/rawDataWorkspaces/ticketmaster/'
out.file<-""
file.names <- dir(path, pattern =".RData")
data <- load(file.names[1])
eventData<-response$`_embedded`$events
presales<-eventData$sales$presales
presales<-rbindlist(presales, fill = TRUE)
View(presales)
View(eventData$images)
images<-rbindlist(images, fill = TRUE)
images<-rbindlist(eventData$images, fill = TRUE)
View(images)
dropDatesDataCols <- c("start","status")
dates<- eventData$dates[ , !(names(eventData$dates) %in% dropDatesDataCols)]
View(eventData$classifications)
View(eventData$promoters)
promtoers<-rbindlist(eventData$promoters, fill = TRUE)
View(promtoers)
promoter<-eventData$promoter
View(eventData$priceRanges)
View(eventData$`_embedded`$venues)
venues<-rbindlist(eventData$`_embedded`$venues, fill = TRUE)
library(jsonlite)
library(data.table)
library(dplyr)
setwd('C:/Users/g1mxb12/Desktop/nflTicketPrices/data/rawDataWorkspaces/ticketmaster/')
path = 'C:/Users/g1mxb12/Desktop/nflTicketPrices/data/rawDataWorkspaces/ticketmaster/'
out.file<-""
file.names <- dir(path, pattern =".RData")
data <- load(file.names[1])
eventData<-response$`_embedded`$events
#fix timestamp variable
timestamp<-gsub(" ", "_", timestamp)
timestamp<-gsub(":",".", timestamp)
date<-substr(x = timestamp,1,10)
#dataframes
#sales
publicSales<- eventData$sales$public
presales<-eventData$sales$presales
presales<-rbindlist(presales, fill = TRUE)
#dates
startDates<-eventData$dates$start
staus<- eventData$dates$status
dropDatesDataCols <- c("start","status")
dates<- eventData$dates[ , !(names(eventData$dates) %in% dropDatesDataCols)]
#promoter
promoter<-eventData$promoter
#priceranges
priceRanges<-rbindlist(eventData$priceRanges, fill = TRUE)
#seatmap
seatmap <- eventData$seatmap
#
ticketLimit <- eventData$ticketLimit
#accessibility
accessibility <- eventData$accessibility
embedded <- eventData$`_embedded`
links <- eventData$`_links`
startDates <- eventData$dates$start
status<-dates$status
dropEventDataCols <- c("images", "classifications", "promoters", "_links", "_embedded", "publicSales", "presales", "startDates", "status", "dates", "promoter", "priceRanges", "seatmap", "ticketLimit", "accessibility")
eventData<- eventData[ , !(names(eventData) %in% dropEventDataCols)]
#Combine dataframes to export
finalEventData<-as.data.table(cbind(date,timestamp, eventData, publicSales, presales, startDates, status, dates, promoter, priceRanges, seatmap, ticketLimit, accessibility))
outputFileName <- paste("C:/Users/g1mxb12/Desktop/nflTicketPrices/data/ticketmaster/cleanData/eventData/individual/tm_", timestamp, ".csv",sep="")
write.csv(finalEventData, file = outputFileName)
data <- load(file.names[1])
eventData<-response$`_embedded`$events
#fix timestamp variable
timestamp<-gsub(" ", "_", timestamp)
timestamp<-gsub(":",".", timestamp)
date<-substr(x = timestamp,1,10)
#dataframes
#sales
publicSales<- eventData$sales$public
presales<-eventData$sales$presales
presales<-rbindlist(presales, fill = TRUE)
#dates
startDates<-eventData$dates$start
staus<- eventData$dates$status
dropDatesDataCols <- c("start","status")
dates<- eventData$dates[ , !(names(eventData$dates) %in% dropDatesDataCols)]
#promoter
promoter<-eventData$promoter
#priceranges
priceRanges<-rbindlist(eventData$priceRanges, fill = TRUE)
#seatmap
seatmap <- eventData$seatmap
#
ticketLimit <- eventData$ticketLimit
#accessibility
accessibility <- eventData$accessibility
embedded <- eventData$`_embedded`
links <- eventData$`_links`
startDates <- eventData$dates$start
status<-dates$status
dropEventDataCols <- c("images", "sales", "classifications", "promoters", "_links", "_embedded", "publicSales", "presales", "startDates", "status", "dates", "promoter", "priceRanges", "seatmap", "ticketLimit", "accessibility")
eventData<- eventData[ , !(names(eventData) %in% dropEventDataCols)]
#Combine dataframes to export
finalEventData<-as.data.table(cbind(date,timestamp, eventData, publicSales, presales, startDates, status, dates, promoter, priceRanges, seatmap, ticketLimit, accessibility))
outputFileName <- paste("C:/Users/g1mxb12/Desktop/nflTicketPrices/data/ticketmaster/cleanData/eventData/individual/tm_", timestamp, ".csv",sep="")
write.csv(finalEventData, file = outputFileName)
data <- load(file.names[1])
eventData<-response$`_embedded`$events
#fix timestamp variable
timestamp<-gsub(" ", "_", timestamp)
timestamp<-gsub(":",".", timestamp)
date<-substr(x = timestamp,1,10)
#dataframes
#sales
publicSales<- eventData$sales$public
presales<-eventData$sales$presales
presales<-rbindlist(presales, fill = TRUE)
#dates
startDates<-eventData$dates$start
staus<- eventData$dates$status
dropDatesDataCols <- c("start","status")
dates<- eventData$dates[ , !(names(eventData$dates) %in% dropDatesDataCols)]
#promoter
promoter<-eventData$promoter
#priceranges
priceRanges<-rbindlist(eventData$priceRanges, fill = TRUE)
#seatmap
seatmap <- eventData$seatmap
#
ticketLimit <- eventData$ticketLimit
#accessibility
accessibility <- eventData$accessibility
embedded <- eventData$`_embedded`
links <- eventData$`_links`
startDates <- eventData$dates$start
status<-dates$status
dropEventDataCols <- c("images", "sales", "classifications", "products", "promoters", "_links", "_embedded", "publicSales", "presales", "startDates", "status", "dates", "promoter", "priceRanges", "seatmap", "ticketLimit", "accessibility")
eventData<- eventData[ , !(names(eventData) %in% dropEventDataCols)]
#Combine dataframes to export
finalEventData<-as.data.table(cbind(date,timestamp, eventData, publicSales, presales, startDates, status, dates, promoter, priceRanges, seatmap, ticketLimit, accessibility))
outputFileName <- paste("C:/Users/g1mxb12/Desktop/nflTicketPrices/data/ticketmaster/cleanData/eventData/individual/tm_", timestamp, ".csv",sep="")
write.csv(finalEventData, file = outputFileName)
finalEventData<-as.data.table(cbind(date,timestamp, eventData, publicSales, presales, startDates, status, dates, promoter, priceRanges, seatmap, ticketLimit, accessibility))
View(staus)
View(eventData)
data <- load(file.names[1])
eventData<-response$`_embedded`$events
#fix timestamp variable
timestamp<-gsub(" ", "_", timestamp)
timestamp<-gsub(":",".", timestamp)
date<-substr(x = timestamp,1,10)
#dataframes
#sales
publicSales<- eventData$sales$public
presales<-eventData$sales$presales
presales<-rbindlist(presales, fill = TRUE)
#dates
startDates<-eventData$dates$start
staus<- eventData$dates$status
dropDatesDataCols <- c("start","status")
dates<- eventData$dates[ , !(names(eventData$dates) %in% dropDatesDataCols)]
#promoter
promoter<-eventData$promoter
#priceranges
priceRanges<-rbindlist(eventData$priceRanges, fill = TRUE)
#seatmap
seatmap <- eventData$seatmap
#
ticketLimit <- eventData$ticketLimit
#accessibility
accessibility <- eventData$accessibility
embedded <- eventData$`_embedded`
links <- eventData$`_links`
startDates <- eventData$dates$start
status<-dates$status
dropEventDataCols <- c("info", "pleaseNote","images", "sales", "classifications", "products", "promoters", "_links", "_embedded", "publicSales", "presales", "startDates", "status", "dates", "promoter", "priceRanges", "seatmap", "ticketLimit", "accessibility")
eventData<- eventData[ , !(names(eventData) %in% dropEventDataCols)]
#Combine dataframes to export
finalEventData<-as.data.table(cbind(date,timestamp, eventData, publicSales, presales, startDates, status, dates, promoter, priceRanges, seatmap, ticketLimit, accessibility))
outputFileName <- paste("C:/Users/g1mxb12/Desktop/nflTicketPrices/data/ticketmaster/cleanData/eventData/individual/tm_", timestamp, ".csv",sep="")
write.csv(finalEventData, file = outputFileName)
?cbind
finalEventData<-cbind(date,timestamp, eventData, publicSales, presales, startDates, status, dates, promoter, priceRanges, seatmap, ticketLimit, accessibility)
data <- load(file.names[1])
eventData<-response$`_embedded`$events
#fix timestamp variable
timestamp<-gsub(" ", "_", timestamp)
timestamp<-gsub(":",".", timestamp)
date<-substr(x = timestamp,1,10)
#dataframes
#sales
publicSales<- eventData$sales$public
presales<-eventData$sales$presales
presales<-rbindlist(presales, fill = TRUE)
#dates
startDates<-eventData$dates$start
staus<- eventData$dates$status
dropDatesDataCols <- c("start","status")
dates<- eventData$dates[ , !(names(eventData$dates) %in% dropDatesDataCols)]
#promoter
promoter<-eventData$promoter
#priceranges
priceRanges<-rbindlist(eventData$priceRanges, fill = TRUE)
#seatmap
seatmap <- eventData$seatmap
#
ticketLimit <- eventData$ticketLimit
#accessibility
accessibility <- eventData$accessibility
embedded <- eventData$`_embedded`
links <- eventData$`_links`
startDates <- eventData$dates$start
status<-dates$status
dropEventDataCols <- c("info", "presales", "pleaseNote","images", "sales", "classifications", "products", "promoters", "_links", "_embedded", "publicSales", "presales", "startDates", "status", "dates", "promoter", "priceRanges", "seatmap", "ticketLimit", "accessibility")
eventData<- eventData[ , !(names(eventData) %in% dropEventDataCols)]
#Combine dataframes to export
finalEventData<-cbind(date,timestamp, eventData, publicSales, startDates, status, dates, promoter, priceRanges, seatmap, ticketLimit, accessibility)
outputFileName <- paste("C:/Users/g1mxb12/Desktop/nflTicketPrices/data/ticketmaster/cleanData/eventData/individual/tm_", timestamp, ".csv",sep="")
write.csv(finalEventData, file = outputFileName)
data <- load(file.names[1])
eventData<-response$`_embedded`$events
#fix timestamp variable
timestamp<-gsub(" ", "_", timestamp)
timestamp<-gsub(":",".", timestamp)
date<-substr(x = timestamp,1,10)
#dataframes
#sales
publicSales<- eventData$sales$public
presales<-eventData$sales$presales
presales<-rbindlist(presales, fill = TRUE)
#dates
startDates<-eventData$dates$start
staus<- eventData$dates$status
dropDatesDataCols <- c("start","status")
dates<- eventData$dates[ , !(names(eventData$dates) %in% dropDatesDataCols)]
#promoter
promoter<-eventData$promoter
#priceranges
priceRanges<-rbindlist(eventData$priceRanges, fill = TRUE)
#seatmap
seatmap <- eventData$seatmap
#
ticketLimit <- eventData$ticketLimit
#accessibility
accessibility <- eventData$accessibility
embedded <- eventData$`_embedded`
links <- eventData$`_links`
startDates <- eventData$dates$start
status<-dates$status
dropEventDataCols <- c("info", "priceRanges", "presales", "pleaseNote","images", "sales", "classifications", "products", "promoters", "_links", "_embedded", "publicSales", "presales", "startDates", "status", "dates", "promoter", "priceRanges", "seatmap", "ticketLimit", "accessibility")
eventData<- eventData[ , !(names(eventData) %in% dropEventDataCols)]
#Combine dataframes to export
finalEventData<-cbind(date,timestamp, eventData, publicSales, startDates, status, dates, promoter, priceRanges, seatmap, ticketLimit, accessibility)
outputFileName <- paste("C:/Users/g1mxb12/Desktop/nflTicketPrices/data/ticketmaster/cleanData/eventData/individual/tm_", timestamp, ".csv",sep="")
write.csv(finalEventData, file = outputFileName)
data <- load(file.names[1])
eventData<-response$`_embedded`$events
#fix timestamp variable
timestamp<-gsub(" ", "_", timestamp)
timestamp<-gsub(":",".", timestamp)
date<-substr(x = timestamp,1,10)
#dataframes
#sales
publicSales<- eventData$sales$public
presales<-eventData$sales$presales
presales<-rbindlist(presales, fill = TRUE)
#dates
startDates<-eventData$dates$start
staus<- eventData$dates$status
dropDatesDataCols <- c("start","status")
dates<- eventData$dates[ , !(names(eventData$dates) %in% dropDatesDataCols)]
#promoter
promoter<-eventData$promoter
#priceranges
priceRanges<-rbindlist(eventData$priceRanges, fill = TRUE)
#seatmap
seatmap <- eventData$seatmap
#
ticketLimit <- eventData$ticketLimit
#accessibility
accessibility <- eventData$accessibility
embedded <- eventData$`_embedded`
links <- eventData$`_links`
startDates <- eventData$dates$start
status<-dates$status
dropEventDataCols <- c("info", "priceRanges", "presales", "pleaseNote","images", "sales", "classifications", "products", "promoters", "_links", "_embedded", "publicSales", "presales", "startDates", "status", "dates", "promoter", "priceRanges", "seatmap", "ticketLimit", "accessibility")
eventData<- eventData[ , !(names(eventData) %in% dropEventDataCols)]
#Combine dataframes to export
finalEventData<-cbind(date,timestamp, eventData, publicSales, startDates, status, dates, promoter, seatmap, ticketLimit, accessibility)
outputFileName <- paste("C:/Users/g1mxb12/Desktop/nflTicketPrices/data/ticketmaster/cleanData/eventData/individual/tm_", timestamp, ".csv",sep="")
write.csv(finalEventData, file = outputFileName)
finalEventData<-as.data.table(cbind(date,timestamp, eventData, publicSales, startDates, status, dates, promoter, seatmap, ticketLimit, accessibility))
